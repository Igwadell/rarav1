
// This file is machine-generated - edit at your own risk!

'use server';

/**
 * @fileOverview AI-powered similar listing finder.
 *
 * - findSimilarListings - Finds listings similar to an uploaded image.
 * - FindSimilarListingsInput - The input type for the findSimilarListings function.
 * - FindSimilarListingsOutput - The return type for the findSimilarListings function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FindSimilarListingsInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a property, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type FindSimilarListingsInput = z.infer<typeof FindSimilarListingsInputSchema>;

const FindSimilarListingsOutputSchema = z.object({
  query: z.string().describe('A search query generated by the AI to find similar listings.'),
});
export type FindSimilarListingsOutput = z.infer<typeof FindSimilarListingsOutputSchema>;

export async function findSimilarListings(
  input: FindSimilarListingsInput
): Promise<FindSimilarListingsOutput> {
  return findSimilarListingsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'findSimilarListingsPrompt',
  input: {schema: FindSimilarListingsInputSchema},
  output: {schema: FindSimilarListingsOutputSchema},
  prompt: `You are an expert real estate agent. Based on the provided image of a property, generate a concise and effective search query (3-5 words) that could be used to find similar properties. Focus on the most prominent features like architectural style, setting, and overall vibe.

  Photo: {{media url=photoDataUri}}`,
});

const findSimilarListingsFlow = ai.defineFlow(
  {
    name: 'findSimilarListingsFlow',
    inputSchema: FindSimilarListingsInputSchema,
    outputSchema: FindSimilarListingsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
